var map;
var flagBookmark;
var circle;
var homePosition;
var infoBubble;
var markers = [];
var categoriesNames = [];
var categories = [];
var directionsDisplay = new google.maps.DirectionsRenderer;
var loggedIn = false;

function currentUser(){
  loggedIn = true;
}

function recoveryDataCategories(){
  $.ajax({
    type: "GET",
    url: '/categories',
    data : '',
    async: false,
    success: function (data) {
      createArrCategories(data);
    }
  })
}

function createArrCategories(data_categories){
  categories = data_categories;
  for (i = 0; i < categories.length ; i++){
    categoriesNames.push(categories[i].category_id);
  }
}

function initMap() {
  var paris = {lat: 48.856614, lng: 2.3522219000000177};
  var myloc;
  recoveryDataCategories();
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 2,
    center: paris,
    mapTypeControl: false,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  myloc = new google.maps.Marker({
    clickable: true,
    icon: new google.maps.MarkerImage('http://maps.gstatic.com/mapfiles/mobile/mobileimgs2.png',
                                        new google.maps.Size(22,22),
                                        new google.maps.Point(0,18),
                                        new google.maps.Point(11,11)
                                      ),
    map: map
  })

  var arrElementType;
  var allType;
  var arrUrl;
  var i;
  var urlSubstring = window.location.search.substring(1);
  var param = false;

  if(urlSubstring){
    arrUrl = urlSubstring.split("&");
    for (i = 0; i < arrUrl.length; i++) {
      allType = arrUrl[i].split("=");
      if (allType[0] == 'tag')
        recoveryDataByFilter(arrUrl[i]);
      else if ( allType[0]  == 'category_id'){
        arrElementType = allType[1].split(",");
        for (i = 0; i < arrElementType.length; i++) {
          recoveryDataByFilter('category_id='+ arrElementType[i])
          valueCategoriesCheckbox(arrElementType[i], true);
        }
      }
      else if (allType[0] == 'zoom'){
        param = true;
        var number = parseInt(arrElementType[0]);
        map.setZoom(number);
      }
      else if ((allType[0] == 'latlng') && (arrElementType.length== 2)){
        param = true;
        var newCenter = new google.maps.LatLng(arrElementType[0], arrElementType[1]);
        map.setCenter(newCenter);
      }
    }
  }

  else{
    i = 0;
    recoveryDataByFilter('category_id=all');
    while(categoriesNames[i]){
      document.getElementById(categoriesNames[i]).checked = true;
      i++;
    }
  }

  if (navigator.geolocation) navigator.geolocation.getCurrentPosition(function(pos) {
    homePosition = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
    myloc.setPosition(homePosition);
    if(param == false)
      map.setOptions({zoom : 14, center: homePosition});
  });
}

function recoveryDataByFilter(datas){
  $.ajax({
    type: "GET",
    url: '/interests',
    data : datas,
    async: false,
    success: function (data) {
      addMarker(data);
    }
  })
}

function setMapNotOnAll(map, elem) {
  for (i = 0; i < markers.length; i++) {
    if(markers[i].category == elem)
      markers[i].setMap(map);
  }
}

function getMeThere(lat, lng){
  var directionsService = new google.maps.DirectionsService;
  var start = homePosition;
  var end = new google.maps.LatLng( lat, lng);

  infoBubble.close();
  directionsDisplay.setMap(map);
  directionsService.route({
    origin: start,
    destination: end,
    travelMode: google.maps.TravelMode.WALKING,
  }, function(response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}

function recoveryDataBookmarks(id){
  $.ajax({
    type: "POST",
    url: '/bookmarks',
    data : 'interest_id='+id,
    success: function (data) {
      alert('Point bookmarked');
      infoBubble.close();
    },
    error: function(){
      alert('something is wrong');
    }
  });
}

function destroyBookmarks(id){
  $.ajax({
    type: "DELETE",
    url: '/bookmarks/:id',
    data : 'interest_id='+id,
    success: function (data) {
      alert('Point unbookmarked');
      infoBubble.close();
      checkBookmark('bookmark');
    },
    error: function(){
      alert('something is wrong');
    }
  });
}

function initializeFlagBookmark(boolFlag){
  flagBookmark = boolFlag;
}

function createIconUrl(categoryId){
  j = 0;
  while(categoriesNames[j]){
    if (categories[j].category_id == categoryId)
      return (categories[j].icon_url);
    j++;
  }
}

function addMarker(arrDataMarker) {
  var phone;
  var website;
  var bookmark;
  var thumbnail;
  infoBubble = new InfoBubble;

  for (i = 0; i < arrDataMarker.length ; i++){
    icons = createIconUrl(arrDataMarker[i].category_id);
    var marker = new google.maps.Marker({
      clickable : true,
      position: { lat: arrDataMarker[i].latitude, lng: arrDataMarker[i].longitude },
      icon: icons,
      map: map,
      category: arrDataMarker[i].category_id
    });

    google.maps.event.addListener(marker, 'click', (function(marker, i) {
      return function() {
        if (infoBubble.getMap() != null) {
            infoBubble.close()
            delete infoBubble;
            infoBubble = new InfoBubble({
            minWidth: 350,
            minHeight: 150
            });
        }
        phone = '<p>' + (arrDataMarker[i].phone ? 'Phone number : ' + arrDataMarker[i].phone +' </p>' : '</p>');
        website = '<p>' + (arrDataMarker[i].website ? 'website : <a href= "http://' + arrDataMarker[i].website + '"' +' target="_blank">' + arrDataMarker[i].website + '</a>' : '</p>')
        thumbnail = '<p>' + ((arrDataMarker[i].thumbnail_url.match("missing.png")) == null ? '<img src=' + arrDataMarker[i].thumbnail_url + 'alt="image of interest"> </p>' : '</p>');
        if (loggedIn == true ){
            $.ajax({
              type: "GET",
              url: '/bookmarks/:id',
              data : 'interest_id='+ arrDataMarker[i].id,
              async : false,
              success: function (data, flagBookmark) {
                initializeFlagBookmark(data.flag);
              }
            })
            if (flagBookmark)
              bookmark = "<button onclick='destroyBookmarks("+ arrDataMarker[i].id + ")' class='getmethere bookmarker-button'>Unbookmark</button>"
            else
              bookmark = "<button onclick='recoveryDataBookmarks("+ arrDataMarker[i].id + ")' class='getmethere bookmarker-button'>Bookmark</button>"
        }
        else{
          bookmark = ''
        }
        infoBubble.open(map, marker);
        infoBubble.addTab("<div class='infowindow'></div>",
          '<div class="infowindow" style="">'+
          '<h1>'+ arrDataMarker[i].name +'</h1>'+
          '<div id="bodywindow">'+
          '<p> Address:&nbsp' + arrDataMarker[i].address + '</p>' +
          "<button onclick='getMeThere("+ arrDataMarker[i].latitude +","+ arrDataMarker[i].longitude +")' class='getmethere'>Get me there</button>" +
          bookmark +
          phone +
          thumbnail +
          website +
          '</div>'+
          '</div>');
     //     infoBubble.addTab("<div class='infowindow'>Rating</div>", "<div class='infowindow'>Here Rating</div>");
     //     infoBubble.addTab("<div class='infowindow'>Facilities</div>","<div class='infowindow'>Facilities: Ratp handicape parking bus ect...</div>");
      }
    })(marker, i));
    markers.push(marker);
  }
}

function createCircle(map){
  circle = new google.maps.Circle({
      strokeColor: '#FE9C06',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#FE9C06',
      fillOpacity: 0.35,
      map: map,
      center: homePosition,
      radius: 700
  });
  map.setOptions({zoom : 15, center: homePosition});
}

function valueCategoriesCheckbox(categories, bool){
  for (var j = 0; j< categories.length; j++){
    document.getElementById(categories[j]).checked = bool;
  }
}

function checkbox(id){
  if (document.getElementById(id).checked == true){
    recoveryDataByFilter('category_id='+ id);
  }
  else{
    setMapNotOnAll(null, id);
  }
}

function checkCircle(id){
  if (document.getElementById(id).checked == true)
    createCircle(map, null );
  else{
    circle.setMap(null)
  }
}

function checkBookmark(id){
  if (document.getElementById(id).checked == true)
  {
    for (i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    valueCategoriesCheckbox(categoriesNames, false);
    $.ajax({
      type: "GET",
      url: '/bookmarks',
      data : '',
      success: function (data) {
        addMarker(data);
      }
    })
  }
  else{
    recoveryDataByFilter('category_id=all');
    valueCategoriesCheckbox(categoriesNames, true);
  }
}
